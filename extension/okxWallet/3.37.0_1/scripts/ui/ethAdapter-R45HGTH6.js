import{a as L,g as c,h as u}from"./chunk-4XFLYWPW.js";import"./chunk-V6KIMULE.js";import{a as D,b as E}from"./chunk-SONOGRH4.js";import"./chunk-SKYCSHSI.js";import"./chunk-TCSX4HQQ.js";import"./chunk-6H3Y45OD.js";import"./chunk-KALOGAGR.js";import"./chunk-VVMKFL5E.js";import"./chunk-VLSECKR6.js";import"./chunk-UTXGPAP2.js";import{a as l}from"./chunk-NIXASQZU.js";import"./chunk-E5Q7T5U3.js";import"./chunk-GOUDWO5Q.js";import"./chunk-4BZITFG4.js";import"./chunk-7IVGEW2S.js";import{m as S}from"./chunk-WOHVJ5VI.js";import"./chunk-HXEPH4TB.js";import"./chunk-F7IOPQEO.js";import"./chunk-QBSBGD35.js";import"./chunk-GFKCYZVW.js";import{a as I}from"./chunk-CHLBHCPL.js";import"./chunk-V2SICOMY.js";import"./chunk-Z6Y7MSRE.js";import"./chunk-FVQK2MNN.js";import"./chunk-5Z5B37ND.js";import{V as s,Xa as A,kc as g,oc as F}from"./chunk-QWQGBYOY.js";import"./chunk-BUAMOL6H.js";import"./chunk-PLHFXPVU.js";import"./chunk-5BQQ5BTM.js";import"./chunk-4IQZG47E.js";import"./chunk-4USCG7JU.js";import"./chunk-X62Q7VCJ.js";import"./chunk-X7RY3AWM.js";import"./chunk-WQYVBC56.js";import"./chunk-E4IUBLG2.js";import"./chunk-TMKR73CB.js";import"./chunk-J52BXABX.js";import"./chunk-7PMBWAQJ.js";import"./chunk-Z37CYTXG.js";import"./chunk-W3TSI3ZZ.js";import"./chunk-JSF2EI74.js";import"./chunk-HQMURPEG.js";import"./chunk-56JXL4SQ.js";import"./chunk-METSMHFB.js";import{f as y,h as T,m as M,n as p,o as w}from"./chunk-CS4SUKWE.js";M();w();var o=y(L()),d=y(I());F();A();var f=class{constructor(){T(this,"signTransaction",async(t,e,n)=>{e=l(e);let r=await D(e),a=r.getMessageToSign(!1),i=p.Buffer.isBuffer(a)?a.toString("hex"):d.rlp.encode(a).toString("hex"),{type:h,chainId:P}=e,q={path:t.hdPathMap[s],chainId:P,requestId:g().toLowerCase(),signData:i,dataType:h===S.FEE_MARKET?o.KeystoneEthereumSDK.DataType.typedTransaction:o.KeystoneEthereumSDK.DataType.transaction,xfp:t.masterFingerprint},C=await u.openModal(c.showTxParams,{signRequest:q,baseChain:s}),m=p.Buffer.from(C,"hex"),R=m.slice(0,32),b=m.slice(32,64),N=m.slice(64),x=await E(r,{r:R,s:b,v:N});return n?x:{rawTxResult:x}});T(this,"signTypedData",async(t,e)=>{let n=t.hdPathMap[s];if(!["V4","V3"].includes(e.version))throw new Error("this version of typed data signing is no't supported");let a=p.Buffer.from(e.data,"utf-8"),i={path:n,requestId:g().toLowerCase(),signData:a,dataType:o.KeystoneEthereumSDK.DataType.typedData,xfp:t.masterFingerprint};return`0x${await u.openModal(c.showTxParams,{signRequest:i,baseChain:s})}`})}async signPersonalMessage(t,e){let n=t.hdPathMap[s],r=(0,d.stripHexPrefix)(e.data),a={path:n,requestId:g().toLowerCase(),signData:r,dataType:o.KeystoneEthereumSDK.DataType.personalMessage,xfp:t.masterFingerprint};return`0x${await u.openModal(c.showTxParams,{signRequest:a,baseChain:s})}`}},$=new f;export{$ as default};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-R45HGTH6.js.map
